services:
  spark-master:
    image: bitnami/spark:${SPARK_VERSION}
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - USER=spark  
    ports:
      - "1234:4040"
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./job/:/job
      - ./jars/:/jars
      - ./checkpoints:/checkpoints
    mem_limit: 3g
    memswap_limit: 5g
    networks:
      - spark-net
      
  spark-worker-1:
    image: bitnami/spark:${SPARK_VERSION}
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - USER=spark  
      - SPARK_WORKER_MEMORY=2g
    depends_on:
      - spark-master
    mem_limit: 2g
    memswap_limit: 4g
    networks:
      - spark-net

  spark-worker-2:
    image: bitnami/spark:${SPARK_VERSION}
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - USER=spark  
      - SPARK_WORKER_MEMORY=2g
    depends_on:
      - spark-master
    mem_limit: 2g
    memswap_limit: 4g
    networks:
      - spark-net

  broker01:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    environment:
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CLIENT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://broker01:9092,CONTROLLER://broker01:9093,CLIENT://broker01:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker01:9092,CLIENT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker01:9093,2@broker02:9093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_JMX_PORT: 9090
      KAFKA_LOG_DIRS: /var/log/kafka
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'
    ports:
      - 9092:9094
    restart: always
    volumes:
      - kafkaData1:/var/lib/kafka/data
    mem_limit: 2g
    memswap_limit: 4g
    networks:
      - spark-net

  broker02:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    environment:
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CLIENT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://broker02:9092,CONTROLLER://broker02:9093,CLIENT://broker02:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker02:9092,CLIENT://localhost:9094
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker01:9093,2@broker02:9093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_JMX_PORT: 9090
      KAFKA_LOG_DIRS: /var/log/kafka
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'
    ports:
      - 9094:9094
    restart: always
    volumes:
      - kafkaData2:/var/lib/kafka/data
    mem_limit: 2g
    memswap_limit: 4g
    networks:
      - spark-net

  clickhouse:
    image: clickhouse/clickhouse-server
    volumes:
      - clickhouse_data:/var/lib/clickhouse/
    ports:
      - "8124:8123"
    environment:
      - CLICKHOUSE_USER=${CLICKHOUSE_USERNAME}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    mem_limit: 4g
    memswap_limit: 6g
    networks:
      - spark-net


volumes:  
  kafkaData1:
  kafkaData2:
  clickhouse_data:

networks:
  spark-net:
    external: true


